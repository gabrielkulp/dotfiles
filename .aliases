alias config='GIT_DIR=~/.dotfiles GIT_WORK_TREE=~ git'

if ${use_color:=false} ; then
	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
	alias grep="grep --color=auto"
	alias ip="ip -c"
	alias pacman="pacman --color=auto"
	if type lsd &>/dev/null; then
		alias ls="lsd --group-dirs first"
	fi
fi

alias ll="ls -l"
alias la="ls -a"
alias lla="ls -la"
alias cp="cp -i"      # confirm before overwriting something
alias df='df -h'      # human-readable sizes
alias free='free -m'  # show sizes in MB
alias more=less

alias open="xdg-open"
alias note="notes add"
alias lmk="notify-send -i terminal 'Done!' 'The command finished executing'"
alias todo="\$EDITOR ~/Nextcloud/Obsidian/todo.md"

alias codium="codium --enable-features=UseOzonePlatform --ozone-platform=wayland"
alias code="codium"

alias arecord="arecord -f cd -t wav"
alias clock="tput civis && watch -tn1 date +%T; tput cvvis"

alias icat="kitty +kitten icat"
if [ "$TERM" = "xterm-kitty" ]; then
	alias ssh="kitty +kitten ssh"
	alias diff="kitty +kitten diff"
fi

colors() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" "\e[\${value};...;\${value}m"
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37}  # white
			bgc=${bgc#40}  # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}

			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf "%b" " ${seq0}TEXT\e[m"
			printf "%b" " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}

ex () {
	if [ -f "$1" ] ; then
		case $1 in
			*.tar.bz2)   tar xjf "$1"   ;;
			*.tar.gz)    tar xzf "$1"   ;;
			*.bz2)       bunzip2 "$1"   ;;
			*.rar)       unrar x "$1"   ;;
			*.gz)        gunzip  "$1"   ;;
			*.tar)       tar xf  "$1"   ;;
			*.tbz2)      tar xjf "$1"   ;;
			*.tgz)       tar xzf "$1"   ;;
			*.zip)       unzip   "$1"   ;;
			*.Z)         uncompress "$1";;
			*.7z)        7z x    "$1"   ;;
			*)           echo "'$1' cannot be extracted via ex()" ;;
		esac
	else
		echo "'$1' is not a valid file"
	fi
}

share () {
	curl --progress-bar -F"file=@$1" 0x0.st | tee /dev/tty | wl-copy && echo "copied URL"
}

md2pdf () {
	[[ -z "$1" ]] && set -- "$(echo ./*.md | head -n 1 || true)"
	pandoc -s "$1" -o "${1%%.md}.pdf" -V geometry:margin=1in --highlight=tango "${@:2}"
	}

md2pdf_cont () {
	[[ -z "$1" ]] && set -- "$(echo ./*.md | head -n 1 || true)"
	echo "$1" | entr bash -c "$(declare -f md2pdf); md2pdf $* && echo -n ."
	}

alias static="cat /dev/urandom | aplay -f cd -"
audiobook () {
	static &
	PID=$!
	mpv --no-video --save-position-on-quit "$1"
	kill -9 $PID
}
